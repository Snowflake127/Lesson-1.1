from pprint import pprint

class Product:
    name = None

    def __init__(self, name, weight, category):
        self.name = name
        self.weight = weight
        self.category = category
    def __str__(self):
        return f'{self.name},{self.weight},{self.category}'

class Shop:

    __file_name = 'products.rtf'
    def __init__(self):
        self.products = []

    def get_products (self):
        file= open (self.__file_name,'r')
        products= file.read()
        file.close()
        return products

    def add (self, *products):
        file=open(self.__file_name,'r')
        file.read()
        if Product.name in products:
            pprint(f'The product {Product.name} is already in')
            file.close()
        else:
            file.close()
            file=open(self.__file_name,'a')
            file.write(f'{str(products)}\n')
            file.close()


if __name__=='__main__':
    s1=Shop()
    # test objects and methods of class Product
    p1 = Product('Potato', 50.5, 'Vegetables')
    p2 = Product('Spaghetti', 3.4, 'Groceries')
    p3 = Product('Potato', 5.5, 'Vegetables')
    print(p1.__str__())
    print(p2.__str__())
    print(p3.__str__())


    s1.add(p1, p2, p3)
    print(s1.get_products())
